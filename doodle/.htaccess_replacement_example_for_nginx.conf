# 8<------ File: nginx.conf -------- #
# ...

http {
	# ...

	# Get the basename of the original request:
	map $request_uri $map_request_uri_file_name_ext {
		~/(?<captured_request_basename>[^/?]*)(?:\?|$) $captured_request_basename;
	}
}
# -------- End of file. ------>8 #




# 8<------ File: sites-enabled/$SERVER_NAME.conf -------- #
server {
	server_name $SERVER_NAME;
	root $DOCUMENT_ROOT;

# ----- Server limits, log paths, etc: -----

	listen 80;
	listen [::]:80;

	log_format io '[$time_iso8601, $msec] $remote_addr - $status'
		' i$request_length,o$bytes_sent,b$body_bytes_sent,ms$request_time'
		' $request_completion "$request" "$http_referer" "$http_user_agent"';

	error_log /var/log/nginx/$SERVER_NAME.error.log error;
	access_log /var/log/nginx/$SERVER_NAME.access.log io;

	charset utf-8;
	client_max_body_size 9M;
	# ...

# ----- Common file operations: -----

	index index.php index.htm index.html;
	try_files $uri $uri/ =404;

	map $is_args $map_expire_cached_js {
		default	1d;
		'?'	7d;
	}

	location ~* /\.ht[^/]+$ {
		return 403;
	}

	location ~* \.(css|js)$ {
		expires $map_expire_cached_js;
	}

	location ~* \.php$ {
		include snippets/fastcgi-php.conf;
	}

# ----- Drawing game data: -----

	location $ROOTPRFX$DATA_DIR {
		return 403;
	}

	location $ROOTPRFX$DIR_PICS {

		location ~ ^$ROOTPRFX$DIR_PICS.*[^/]$ {
			rewrite ^($ROOTPRFX$DIR_PICS)(([^/])[^/]+\.([^/])[^/]+)$ $1$4/$3/$2;
			error_page 404 $ROOTPRFX$PIC_404;
			try_files $uri =404;
			expires 30d;
		}

		autoindex on;
	}

# ----- Drawing game pages: -----

	location @room {
		return 307 $1;
	}

	location ~ ^$ROOTPRFX($DIR_ARCH|$DIR_OPTS|$DIR_ROOM|$DIR_USER) {

	# if not found, archive thumbs show placeholder image:
		location ~ ^($ROOTPRFX$DIR_ARCH([^/]+/+)+$DIR_THUMB)((\d+)[^/]*?|[^/]+)$ {
			error_page 404 $ROOTPRFX$PIC_404;
			try_files $uri $1$4$THUMB_EXT =404;
			expires 30d;
		}

	# if not found (out of range), archive pages redirect to their folder index:
		location ~ ^($ROOTPRFX$DIR_ARCH([^/]+/+)+)((\d+)[^/]*?|[^/]+)$ {
			try_files $uri $1$4$PAGE_EXT @room;
			expires 1d;
		}

	# legacy service-reserved "filenames" (digits and minus only):
	# if someone wants a room name like this, needs to add a slash:
		location ~ ^($ROOTPRFX([^/]+/+)+[-\d]*)$ {
			rewrite ^ $ROOTPRFX;
		}

	# any other filename: add a slash -> folder name automatically:
		location ~ ^($ROOTPRFX([^/]+/+)+[^/]+)$ {
			return 302 $1/$is_args$args;
		}

	# the script will parse & fix the args & folders from REQUEST_URI:
		rewrite ^ $ROOTPRFX;
	}

# ----- Download zip stream from filelist: -----

	location $ROOTPRFX$DIR_ARCH_DL {

	# create zip stream, if listfile exists: https://github.com/evanmiller/mod_zip
		location ~* \$ARCH_DL_EXT$ {
			gzip off;

			proxy_set_header Host 'archive.local';
			proxy_set_header Accept-Encoding '';

			proxy_pass http://127.0.0.1:80;
		}

	# show existing files by direct link:
		location ~* ^$ROOTPRFX$DIR_ARCH_DL.*[^/]$ {
			try_files $uri =404;
		}

	# hide listfiles listing to prevent ineligible scraping:
		return 403;
	}
}
# Zip archive stream, generated on the fly from requested filelist: -----------
server {
	# from http://leafo.net/guides/nginx-reverse-proxy-to-self.html

	# must match host header & port from above:
	server_name archive.local;
	listen 80;

	# prevent double logging requests:
	access_log off;
	error_log /var/log/nginx/$SERVER_NAME.error.log error;

	# allow only requests from same machine:
	allow 127.0.0.1;
	deny all;

	root $DOCUMENT_ROOT;

	add_header Content-Disposition 'attachment; filename=$map_request_uri_file_name_ext';
	add_header X-Archive-Files 'zip';

	gzip off;

	expires -1;

	try_files $uri $uri.txt =404;
}
# -------- End of file. ------>8 #




# 8<------ File: snippets/fastcgi-php.conf -------- #
fastcgi_split_path_info ^(.+\.php)(/.+)?$;
try_files $fastcgi_script_name =404;

#fastcgi_pass 127.0.0.1:9000;
fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
fastcgi_index index.php;
include snippets/fastcgi-params.conf;

set $path_info $fastcgi_path_info;
fastcgi_param PATH_INFO $path_info if_not_empty;
fastcgi_param REDIRECT_STATUS 200;
# -------- End of file. ------>8 #




# 8<------ File: snippets/fastcgi-params.conf -------- #
fastcgi_param GATEWAY_INTERFACE	CGI/1.1;
fastcgi_param SERVER_SOFTWARE	nginx/$nginx_version;
fastcgi_param SERVER_PROTOCOL	$server_protocol;

fastcgi_param REMOTE_ADDR	$remote_addr;
fastcgi_param REMOTE_PORT	$remote_port;
fastcgi_param SERVER_ADDR	$server_addr;
fastcgi_param SERVER_PORT	$server_port;
fastcgi_param SERVER_NAME	$server_name;

fastcgi_param HTTPS		$https if_not_empty;
fastcgi_param REQUEST_SCHEME	$scheme;
fastcgi_param REQUEST_METHOD	$request_method;
fastcgi_param REQUEST_URI	$request_uri;
fastcgi_param DOCUMENT_URI	$document_uri;
fastcgi_param DOCUMENT_ROOT	$document_root;
fastcgi_param SCRIPT_NAME	$fastcgi_script_name;
fastcgi_param SCRIPT_FILENAME	$document_root$fastcgi_script_name;
fastcgi_param QUERY_STRING	$query_string if_not_empty;
fastcgi_param CONTENT_TYPE	$content_type if_not_empty;
fastcgi_param CONTENT_LENGTH	$content_length if_not_empty;
# -------- End of file. ------>8 #